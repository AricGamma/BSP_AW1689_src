#ifndef HIDDESC_H
#define HIDDESC_H
#include <initguid.h>
#include <wdm.h>
#include <wdf.h>
#include <hidport.h>
#include <ntstrsafe.h>
#include "trace.h"
#include "ntdef.h"
#include "Features.h"
typedef UCHAR HID_REPORT_DESCRIPTOR, *PHID_REPORT_DESCRIPTOR;
/*
1.HID_REPORT_DESCRIPTOR
2.HID_DESCRIPTOR ?
3.HIDFX2_INPUT_REPORT
*/
//
#ifdef SET_MULTITOUCH_5POINT
#define REPORTID_MAX_COUNT 0x05
#else
#define REPORTID_MAX_COUNT 0x0a
#endif
#define REPORTID_FW_KEY 0x02
#define REPORTID_INPUT 0x01 // change here

#ifdef SUPPORT_WINKEY
#define REPORTID_WINKEY 0x03
#define WINKEY_CENTER_X	2048
#define WINKEY_CENTER_Y	2048
#define WINKEY_WIDTH_X		40
#define WINKEY_WIDTH_Y		20
#endif

#define LOGICAL_XLSB (LOGICAL_MAX_X%256)
#define LOGICAL_XMSB (LOGICAL_MAX_X/256)
#define LOGICAL_YLSB (LOGICAL_MAX_Y%256)
#define LOGICAL_YMSB (LOGICAL_MAX_Y/256)
#define PHYSICAL_XLSB (PHYSICAL_MAX_X%256)
#define PHYSICAL_XMSB (PHYSICAL_MAX_X/256)
#define PHYSICAL_YLSB (PHYSICAL_MAX_Y%256)
#define PHYSICAL_YMSB (PHYSICAL_MAX_Y/256)
#define MAX_TOUCHES REPORTID_MAX_COUNT 
#define MAX_CONTACTS REPORTID_MAX_COUNT
#define PS_DEEP 2
#define FW_KEY_LENGTH 256

typedef struct _MAX_COUNT_REPORT{ 
	UCHAR ReportID;
	UCHAR MaxCount;
}HID_MAX_COUNT_REPORT, *PHID_MAX_COUNT_REPORT;

typedef struct _FW_KEY_REPORT{
	UCHAR ReportId;
	UCHAR FirmwareKey[FW_KEY_LENGTH];
}HID_FW_KEY_REPORT, *PHID_FW_KEY_REPORT;

#define VERDOR_ID_SILEAD 0x0690

#ifdef GSL1680
#define PRODUCT_ID_SILEAD 0x0689
#elif defined(GSL1681)
#define PRODUCT_ID_SILEAD 0x0691
#elif defined(GSL1688)
#define PRODUCT_ID_SILEAD 0x0698
#elif defined(GSL2681)
#define PRODUCT_ID_SILEAD 0x0a79
#elif defined(GSL2682)
#define PRODUCT_ID_SILEAD 0x0a7a
#elif defined(GSL3670)
#define PRODUCT_ID_SILEAD 0x0e56
#elif defined(GSL3673)
#define PRODUCT_ID_SILEAD 0x0e59
#elif defined(GSL3675)
#define PRODUCT_ID_SILEAD 0x0e5b
#elif defined(GSL3676)
#define PRODUCT_ID_SILEAD 0x0e5c
#elif defined(GSL3679)
#define PRODUCT_ID_SILEAD 0x0e5f
#elif defined(GSL3680)
#define PRODUCT_ID_SILEAD 0x0e60
#elif defined(GSL3692)
#define PRODUCT_ID_SILEAD 0x0e6c
#elif defined(GSL5680)
#define PRODUCT_ID_SILEAD 0x1630
#else
#define PRODUCT_ID_SILEAD 0x0690
#endif

#define VERSION_NUMBER_SILEAD 0x0100

#ifdef GSL1680
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x7A, 0x48, 0xB7, 0xDF, 0xA0, 0xFB, 0x05, 0x2B, 0x53, 0xB3, 0x82, 0x11, 0x12, 0x19, 0x11, 0x54,
	0x77, 0x2B, 0x10, 0x47, 0x96, 0x43, 0xDA, 0xB5, 0x26, 0xB5, 0x07, 0x87, 0xAB, 0x82, 0x52, 0x63,
	0x2E, 0xC3, 0xE3, 0xA0, 0x52, 0xE7, 0xEE, 0xCE, 0x14, 0xB6, 0xE3, 0xE0, 0xA1, 0x7D, 0x5D, 0x63,
	0xCF, 0x0E, 0xA3, 0x5B, 0xCD, 0x37, 0xEA, 0xE6, 0x8E, 0x07, 0x28, 0x83, 0xF5, 0x82, 0x8D, 0x85,
	0xD0, 0x67, 0xE0, 0x98, 0x82, 0x51, 0x6B, 0xE1, 0x98, 0x55, 0x3A, 0x36, 0x4D, 0x1C, 0xC7, 0x88,
	0x82, 0x32, 0x53, 0x5B, 0x4D, 0xFC, 0x4C, 0xC2, 0x3E, 0x09, 0x2C, 0x8D, 0x1F, 0x30, 0x3E, 0xA2,
	0x65, 0x79, 0xFC, 0x41, 0xB2, 0xB0, 0x97, 0x05, 0x88, 0x4C, 0x75, 0xFD, 0x1C, 0xF1, 0xD9, 0x5D,
	0xDB, 0xB1, 0x41, 0x35, 0x99, 0x08, 0xC4, 0x95, 0x72, 0x88, 0x83, 0x63, 0x6A, 0x95, 0x62, 0xAB,
	0x3B, 0xAC, 0x42, 0xBE, 0x5F, 0x6D, 0xF3, 0x62, 0x64, 0xB4, 0xF3, 0xF8, 0xE9, 0x3F, 0xF9, 0x2A,
	0x13, 0x0B, 0x4B, 0x57, 0x41, 0x47, 0xE5, 0xA4, 0x3B, 0x49, 0x78, 0xD4, 0xCE, 0x3B, 0x7C, 0x33,
	0x02, 0xFA, 0x7C, 0x3F, 0x2F, 0x82, 0xF2, 0x3C, 0xCD, 0xBE, 0x51, 0xBB, 0x6E, 0xB0, 0xF3, 0x17,
	0xA5, 0x14, 0x24, 0xC0, 0xA9, 0x5A, 0x5F, 0xA1, 0x80, 0x03, 0xBF, 0xC1, 0x7F, 0x70, 0xD1, 0xDB,
	0x8E, 0xA5, 0xE5, 0x55, 0x96, 0xC1, 0x84, 0xE8, 0xFC, 0x02, 0xB2, 0x60, 0xAB, 0xF2, 0xE6, 0x7F,
	0x4A, 0x0D, 0x5E, 0x44, 0x6D, 0xCE, 0x2C, 0xB2, 0xE5, 0xA6, 0x85, 0xDB, 0x73, 0x19, 0x45, 0xBC,
	0xEF, 0x4A, 0xD2, 0x9A, 0xB4, 0x3E, 0xFC, 0xBE, 0x72, 0x43, 0x21, 0x18, 0xD8, 0x61, 0x03, 0x96,
	0x7C, 0x89, 0x82, 0x19, 0x78, 0x6D, 0x7D, 0x5E, 0x66, 0x3A, 0x30, 0x1D, 0xE6, 0xDC, 0x33, 0x6F,
};
#elif defined(GSL2681)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x7A, 0x48, 0xB7, 0xDF, 0xA0, 0xFB, 0x05, 0x2B, 0x53, 0xB3, 0x82, 0x11, 0x12, 0x19, 0x11, 0x54,
	0x77, 0x2B, 0x10, 0x47, 0x96, 0x43, 0xDA, 0xB5, 0x26, 0xB5, 0x07, 0x87, 0xAB, 0x82, 0x52, 0x63,
	0x2E, 0xC3, 0xE3, 0xA0, 0x52, 0xE7, 0xEE, 0xCE, 0x14, 0xB6, 0xE3, 0xE0, 0xA1, 0x7D, 0x5D, 0x63,
	0xCF, 0x0E, 0xA3, 0x5B, 0xCD, 0x37, 0xEA, 0xE6, 0x8E, 0x07, 0x28, 0x83, 0xF5, 0x82, 0x8D, 0x85,
	0xD0, 0x67, 0xE0, 0x98, 0x82, 0x51, 0x6B, 0xE1, 0x98, 0x55, 0x3A, 0x36, 0x4D, 0x1C, 0xC7, 0x88,
	0x82, 0x32, 0x53, 0x5B, 0x4D, 0xFC, 0x4C, 0xC2, 0x3E, 0x09, 0x2C, 0x8D, 0x1F, 0x30, 0x3E, 0xA2,
	0x65, 0x79, 0xFC, 0x41, 0xB2, 0xB0, 0x97, 0x05, 0x88, 0x4C, 0x75, 0xFD, 0x1C, 0xF1, 0xD9, 0x5D,
	0xDB, 0xB1, 0x41, 0x35, 0x99, 0x08, 0xC4, 0x95, 0x72, 0x88, 0x83, 0x63, 0x6A, 0x95, 0x62, 0xAB,
	0x3B, 0xAC, 0x42, 0xBE, 0x5F, 0x6D, 0xF3, 0x62, 0x64, 0xB4, 0xF3, 0xF8, 0xE9, 0x3F, 0xF9, 0x2A,
	0x13, 0x0B, 0x4B, 0x57, 0x41, 0x47, 0xE5, 0xA4, 0x3B, 0x49, 0x78, 0xD4, 0xCE, 0x3B, 0x7C, 0x33,
	0x02, 0xFA, 0x7C, 0x3F, 0x2F, 0x82, 0xF2, 0x3C, 0xCD, 0xBE, 0x51, 0xBB, 0x6E, 0xB0, 0xF3, 0x17,
	0xA5, 0x14, 0x24, 0xC0, 0xA9, 0x5A, 0x5F, 0xA1, 0x80, 0x03, 0xBF, 0xC1, 0x7F, 0x70, 0xD1, 0xDB,
	0x8E, 0xA5, 0xE5, 0x55, 0x96, 0xC1, 0x84, 0xE8, 0xFC, 0x02, 0xB2, 0x60, 0xAB, 0xF2, 0xE6, 0x7F,
	0x4A, 0x0D, 0x5E, 0x44, 0x6D, 0xCE, 0x2C, 0xB2, 0xE5, 0xA6, 0x85, 0xDB, 0x73, 0x19, 0x45, 0xBC,
	0xEF, 0x4A, 0xD2, 0x9A, 0xB4, 0x3E, 0xFC, 0xBE, 0x72, 0x43, 0x21, 0x18, 0xD8, 0x61, 0x03, 0x96,
	0x7C, 0x89, 0x82, 0x19, 0x78, 0x6D, 0x7D, 0x5E, 0x66, 0x3A, 0x30, 0x1D, 0xE6, 0xDC, 0x33, 0x6F,
};
#elif defined(GSL2682)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x7A, 0x48, 0xB7, 0xDF, 0xA0, 0xFB, 0x05, 0x2B, 0x53, 0xB3, 0x82, 0x11, 0x12, 0x19, 0x11, 0x54,
	0x77, 0x2B, 0x10, 0x47, 0x96, 0x43, 0xDA, 0xB5, 0x26, 0xB5, 0x07, 0x87, 0xAB, 0x82, 0x52, 0x63,
	0x2E, 0xC3, 0xE3, 0xA0, 0x52, 0xE7, 0xEE, 0xCE, 0x14, 0xB6, 0xE3, 0xE0, 0xA1, 0x7D, 0x5D, 0x63,
	0xCF, 0x0E, 0xA3, 0x5B, 0xCD, 0x37, 0xEA, 0xE6, 0x8E, 0x07, 0x28, 0x83, 0xF5, 0x82, 0x8D, 0x85,
	0xD0, 0x67, 0xE0, 0x98, 0x82, 0x51, 0x6B, 0xE1, 0x98, 0x55, 0x3A, 0x36, 0x4D, 0x1C, 0xC7, 0x88,
	0x82, 0x32, 0x53, 0x5B, 0x4D, 0xFC, 0x4C, 0xC2, 0x3E, 0x09, 0x2C, 0x8D, 0x1F, 0x30, 0x3E, 0xA2,
	0x65, 0x79, 0xFC, 0x41, 0xB2, 0xB0, 0x97, 0x05, 0x88, 0x4C, 0x75, 0xFD, 0x1C, 0xF1, 0xD9, 0x5D,
	0xDB, 0xB1, 0x41, 0x35, 0x99, 0x08, 0xC4, 0x95, 0x72, 0x88, 0x83, 0x63, 0x6A, 0x95, 0x62, 0xAB,
	0x3B, 0xAC, 0x42, 0xBE, 0x5F, 0x6D, 0xF3, 0x62, 0x64, 0xB4, 0xF3, 0xF8, 0xE9, 0x3F, 0xF9, 0x2A,
	0x13, 0x0B, 0x4B, 0x57, 0x41, 0x47, 0xE5, 0xA4, 0x3B, 0x49, 0x78, 0xD4, 0xCE, 0x3B, 0x7C, 0x33,
	0x02, 0xFA, 0x7C, 0x3F, 0x2F, 0x82, 0xF2, 0x3C, 0xCD, 0xBE, 0x51, 0xBB, 0x6E, 0xB0, 0xF3, 0x17,
	0xA5, 0x14, 0x24, 0xC0, 0xA9, 0x5A, 0x5F, 0xA1, 0x80, 0x03, 0xBF, 0xC1, 0x7F, 0x70, 0xD1, 0xDB,
	0x8E, 0xA5, 0xE5, 0x55, 0x96, 0xC1, 0x84, 0xE8, 0xFC, 0x02, 0xB2, 0x60, 0xAB, 0xF2, 0xE6, 0x7F,
	0x4A, 0x0D, 0x5E, 0x44, 0x6D, 0xCE, 0x2C, 0xB2, 0xE5, 0xA6, 0x85, 0xDB, 0x73, 0x19, 0x45, 0xBC,
	0xEF, 0x4A, 0xD2, 0x9A, 0xB4, 0x3E, 0xFC, 0xBE, 0x72, 0x43, 0x21, 0x18, 0xD8, 0x61, 0x03, 0x96,
	0x7C, 0x89, 0x82, 0x19, 0x78, 0x6D, 0x7D, 0x5E, 0x66, 0x3A, 0x30, 0x1D, 0xE6, 0xDC, 0x33, 0x6F,
};
#elif defined(GSL3670)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x29, 0x84, 0xb0, 0xdb, 0xd9, 0xe6, 0x8c, 0x38, 0xac, 0x99, 0x45, 0x69, 0x12, 0x5c, 0x45, 0x75,
	0xa8, 0xe6, 0x19, 0x86, 0xa0, 0xad, 0x59, 0x33, 0xf7, 0x08, 0x30, 0x52, 0x07, 0x27, 0x7b, 0xc6,
	0xca, 0x5b, 0xfb, 0xc1, 0xba, 0x8e, 0x4a, 0xa9, 0x1b, 0x3c, 0x85, 0x6c, 0x23, 0x0f, 0x2d, 0x86,
	0x06, 0x49, 0xc5, 0x25, 0x89, 0x7f, 0xe8, 0xdd, 0xff, 0xf2, 0xcf, 0x64, 0x3d, 0x86, 0x75, 0x58,
	0x40, 0x41, 0xfa, 0xe6, 0x45, 0x9d, 0xf9, 0x9a, 0x40, 0x00, 0x43, 0xef, 0x3d, 0x9a, 0x61, 0xe6,
	0xae, 0x19, 0x56, 0x4f, 0x85, 0xe9, 0x4f, 0xc2, 0xe7, 0x89, 0x8b, 0x66, 0xde, 0xe8, 0x6d, 0x54,
	0x1f, 0xd0, 0x5e, 0x3e, 0x8c, 0x24, 0x7a, 0x6f, 0xfe, 0x95, 0x22, 0x10, 0xd2, 0xd3, 0xba, 0x50,
	0x32, 0x07, 0xaf, 0x99, 0x29, 0x43, 0x3e, 0x4d, 0x89, 0x3d, 0x1e, 0x9c, 0x47, 0xd5, 0x76, 0x3c,
	0xb5, 0xd9, 0x6f, 0xd8, 0x72, 0xa2, 0xb3, 0xf5, 0x22, 0x39, 0x65, 0x13, 0xb0, 0xa7, 0x87, 0x61,
	0x69, 0x4f, 0x28, 0xe8, 0x19, 0x2e, 0x29, 0x02, 0x2a, 0x6a, 0xf9, 0x18, 0xca, 0xf7, 0xd8, 0x44,
	0x3c, 0xcc, 0x57, 0xa6, 0xdd, 0xe1, 0x45, 0x5a, 0x23, 0xda, 0x5d, 0x2c, 0xce, 0x09, 0x62, 0x14,
	0x8a, 0x70, 0xd1, 0xbe, 0x92, 0x64, 0xc9, 0xfe, 0xd9, 0x8e, 0x7b, 0xea, 0xf0, 0x0c, 0xfe, 0xb6,
	0xcf, 0xb1, 0x83, 0x79, 0x1c, 0x91, 0x47, 0x56, 0xb3, 0x1b, 0x91, 0xa4, 0xbe, 0xfc, 0x52, 0xcb,
	0x6c, 0x32, 0xb8, 0xce, 0xa8, 0x4f, 0x55, 0x5d, 0xe8, 0x3c, 0x1c, 0x0a, 0x5a, 0xe5, 0xd9, 0x06,
	0xad, 0xfb, 0xe7, 0x2d, 0x05, 0x11, 0xa0, 0x73, 0x72, 0x4b, 0x82, 0x63, 0x68, 0x87, 0xb4, 0xba,
	0x2b, 0xdb, 0xdc, 0x6c, 0x96, 0x26, 0xfb, 0xa7, 0xd2, 0x6b, 0x22, 0x68, 0xf8, 0x45, 0xa3, 0x6d,
};
#elif defined(GSL3673)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x00, 0xF1, 0xE1, 0x0C, 0x0B, 0x2B, 0x14, 0x5E, 0x4D, 0x3C, 0xD0, 0x7A, 0x1A, 0xEA, 0xED, 0x9C,
	0x4B, 0x73, 0x1F, 0xFC, 0xA8, 0x2E, 0xC1, 0xE7, 0x47, 0xB7, 0x7B, 0x3D, 0x0C, 0xE1, 0x34, 0x0F,
	0xA9, 0xAA, 0xBC, 0x16, 0xAE, 0x54, 0xD2, 0x17, 0x50, 0x56, 0x2F, 0xBD, 0x49, 0x66, 0x5F, 0x36,
	0x21, 0x13, 0x8F, 0x84, 0x7B, 0x79, 0x12, 0x61, 0xD7, 0xEC, 0xFC, 0xB1, 0xB7, 0x06, 0x8A, 0xF7,
	0x7D, 0x3D, 0x52, 0x22, 0x54, 0x00, 0x6D, 0x7A, 0xA4, 0xE3, 0xE7, 0xE0, 0x55, 0xB6, 0x99, 0x8B,
	0xA4, 0x53, 0xE1, 0xDE, 0x6E, 0x48, 0x4F, 0xDE, 0x6C, 0xD1, 0x12, 0x46, 0xBD, 0xAB, 0x15, 0x7E,
	0xAC, 0xA0, 0x55, 0xF8, 0x18, 0x82, 0x9E, 0x75, 0x41, 0x4B, 0x4B, 0xEA, 0xE6, 0x02, 0x2F, 0xD3,
	0xAC, 0x1C, 0x8C, 0x7C, 0xDC, 0x4A, 0x76, 0xF2, 0x56, 0x02, 0x32, 0x25, 0x70, 0x5A, 0xE2, 0x60,
	0x34, 0x05, 0xD4, 0x7F, 0x13, 0x69, 0x0A, 0x44, 0x01, 0x80, 0xED, 0x18, 0x2C, 0x34, 0xD4, 0x5D,
	0xB5, 0x36, 0xE3, 0xB3, 0xCF, 0xC4, 0xCE, 0x74, 0x73, 0x9C, 0x72, 0xEA, 0x45, 0x43, 0x1F, 0x74,
	0x9E, 0x40, 0x17, 0xAB, 0xCE, 0x85, 0x81, 0x9B, 0x99, 0xF9, 0x01, 0xD5, 0x04, 0xB6, 0x35, 0x0B,
	0xEF, 0xA4, 0x5A, 0x6D, 0x92, 0x26, 0x23, 0xD6, 0x32, 0x02, 0xE1, 0x5C, 0xDD, 0x50, 0xA7, 0xBA,
	0x14, 0x21, 0x64, 0x1F, 0x4E, 0x9F, 0x3D, 0x97, 0x05, 0x15, 0xFE, 0xE4, 0x53, 0xD9, 0xFF, 0x96,
	0x90, 0xD9, 0xAC, 0x94, 0x75, 0x3D, 0x92, 0x4D, 0x24, 0x57, 0x05, 0xC5, 0x8D, 0x18, 0xF2, 0x81,
	0xAE, 0x57, 0x6F, 0xFD, 0x49, 0x52, 0x1C, 0xDB, 0x4D, 0x67, 0x8A, 0xF5, 0x5B, 0x85, 0xF1, 0x57,
	0xAF, 0xAC, 0x63, 0x9E, 0x81, 0xA4, 0x01, 0x4F, 0xBF, 0x0E, 0x67, 0xCB, 0x31, 0x0B, 0x32, 0xC5,
};
#elif defined(GSL3675)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0xAC, 0x4D, 0xAF, 0x6E, 0xA1, 0x54, 0x03, 0xE8, 0x0F, 0x1E, 0x23, 0x8E, 0x1E, 0xCB, 0x21, 0x8E,
	0xF6, 0x03, 0x3C, 0xB1, 0x7E, 0x7C, 0xBA, 0xBC, 0xF3, 0xDA, 0xDF, 0x46, 0x82, 0x3C, 0x27, 0x8F,
	0xA5, 0xF4, 0x81, 0x0F, 0x90, 0x59, 0xDA, 0x55, 0x9F, 0xC0, 0xEC, 0xB1, 0xAF, 0x9B, 0x26, 0x4F,
	0xAE, 0x1F, 0xCD, 0xDA, 0xD0, 0xC7, 0xA9, 0xCD, 0xCF, 0x18, 0x22, 0xA8, 0x87, 0xAA, 0x64, 0xA1,
	0xD9, 0xE0, 0x21, 0xAE, 0xCA, 0xE5, 0x66, 0x2B, 0x0A, 0x23, 0x3D, 0x3A, 0xFB, 0x66, 0xFE, 0x48,
	0x14, 0x49, 0x72, 0xAE, 0xD8, 0x6F, 0xB5, 0xBB, 0x1A, 0xBC, 0xB1, 0xD0, 0x7D, 0x4A, 0x69, 0xC9,
	0x33, 0xDE, 0xF5, 0x07, 0xC3, 0x15, 0x3E, 0xF7, 0xAB, 0x3F, 0x44, 0x2D, 0x20, 0xB6, 0x2D, 0x0E,
	0x30, 0xEB, 0xB7, 0x62, 0x45, 0x89, 0x92, 0x6A, 0x43, 0x57, 0xC0, 0xAF, 0x79, 0x35, 0x91, 0x5A,
	0x57, 0xA9, 0xE4, 0x19, 0xBE, 0x39, 0xF6, 0xC8, 0x0D, 0x3E, 0x3E, 0xFA, 0x6E, 0xE2, 0xE7, 0x80,
	0xF8, 0xE7, 0x3E, 0x93, 0x69, 0x26, 0x28, 0x12, 0x93, 0x75, 0xF1, 0xBB, 0x5D, 0x1F, 0x3D, 0xA0,
	0x3B, 0xAD, 0xDE, 0x35, 0x9C, 0xC8, 0x4C, 0x02, 0xC0, 0x98, 0xE8, 0xAB, 0x9E, 0x29, 0xBA, 0x06,
	0x50, 0x6C, 0x78, 0x55, 0x3A, 0x00, 0xDA, 0x28, 0x4B, 0x20, 0x9F, 0x83, 0xCC, 0x55, 0x67, 0x11,
	0x87, 0xBF, 0x32, 0x8F, 0x95, 0x2E, 0xD3, 0x89, 0x47, 0x26, 0x5F, 0x15, 0x53, 0xD1, 0x0D, 0x70,
	0x99, 0x91, 0x2E, 0xD5, 0x31, 0x9D, 0xF5, 0x82, 0x7F, 0x42, 0x37, 0x82, 0x19, 0xC7, 0x73, 0x36,
	0xB2, 0x47, 0xAD, 0x79, 0xE2, 0x8D, 0xAD, 0x39, 0x15, 0x8A, 0xCE, 0x90, 0x33, 0x77, 0x5A, 0x62,
	0x83, 0x0E, 0x8A, 0x96, 0x74, 0xA0, 0x1D, 0x21, 0x5D, 0x4E, 0xDF, 0x51, 0xE4, 0xAE, 0xE5, 0xC9,
};
#elif defined(GSL3676)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x10, 0x2B, 0xC3, 0x5F, 0x9F, 0xF4, 0xFE, 0x5F, 0x61, 0x87, 0x81, 0x3E, 0x36, 0xCC, 0x0F, 0xDD,
	0x2D, 0x04, 0xD6, 0x79, 0x8A, 0xE6, 0x07, 0x0B, 0xA6, 0x81, 0x71, 0xA4, 0xEE, 0x30, 0x26, 0xC4,
	0x3F, 0xEB, 0xEA, 0x3D, 0x81, 0x75, 0xE6, 0xF7, 0x2D, 0x4E, 0x77, 0xDA, 0x0C, 0x36, 0x73, 0x78,
	0x8D, 0x48, 0xCD, 0x84, 0x14, 0xD0, 0x57, 0xF8, 0x3F, 0x4F, 0x8B, 0x49, 0xC4, 0x3C, 0xF2, 0xBE,
	0xE4, 0x0E, 0xF9, 0xD5, 0x00, 0xE2, 0x8A, 0x91, 0xDF, 0xF2, 0xCE, 0xFA, 0x8D, 0xE3, 0x85, 0xB3,
	0x83, 0x13, 0x87, 0xD6, 0x1C, 0x27, 0x53, 0x35, 0x14, 0x4B, 0xC3, 0xC7, 0xE5, 0x54, 0xB9, 0xB1,
	0x20, 0xA3, 0x29, 0xC0, 0x0D, 0xF6, 0x69, 0xDD, 0x36, 0xC7, 0x83, 0xA5, 0xDA, 0xB1, 0x28, 0xA5,
	0x42, 0xEA, 0xEC, 0xFB, 0x19, 0x02, 0x81, 0x03, 0xF4, 0x73, 0x29, 0x1E, 0xE5, 0xC1, 0x8A, 0x82,
	0xEA, 0xFA, 0xD3, 0x78, 0x33, 0x95, 0x0B, 0x03, 0xFE, 0xA9, 0x85, 0xAE, 0xE1, 0xE8, 0x57, 0x0B,
	0x72, 0x5D, 0x55, 0x5D, 0x23, 0xB9, 0xC8, 0x8C, 0x4A, 0xA3, 0x33, 0xE0, 0x4A, 0x03, 0x0D, 0x50,
	0xFC, 0x8D, 0x50, 0xD3, 0x2C, 0x78, 0x76, 0xD7, 0x13, 0xD8, 0xE7, 0x8F, 0x74, 0x9F, 0x4B, 0x49,
	0x70, 0xE0, 0x35, 0x5C, 0x62, 0x40, 0x5D, 0x41, 0xD2, 0x21, 0x68, 0xA6, 0x37, 0xF4, 0xA4, 0xA3,
	0x3C, 0xC8, 0xFE, 0xF4, 0x16, 0xFF, 0x88, 0x86, 0x69, 0xB6, 0x96, 0xB2, 0x77, 0xD6, 0x69, 0x68,
	0x00, 0x0F, 0xD9, 0xDA, 0x2E, 0x2B, 0x1E, 0xA2, 0xAA, 0x91, 0x86, 0xFA, 0x76, 0x62, 0x84, 0x54,
	0xD0, 0xF1, 0x17, 0xAE, 0xC1, 0x03, 0xE2, 0xC4, 0xA0, 0xD4, 0x03, 0xCF, 0x93, 0x14, 0xC7, 0xEA,
	0x8C, 0x72, 0x6E, 0xF4, 0x66, 0x26, 0x2F, 0xA2, 0xB8, 0xC0, 0x72, 0xAC, 0x2C, 0x10, 0x14, 0x58,
};
#elif defined(GSL3680)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x84, 0x62, 0x8C, 0x67, 0xD4, 0x74, 0x8F, 0x78, 0xEE, 0xFF, 0xDF, 0x7B, 0x1D, 0xBF, 0xB2, 0xA9,
	0xAE, 0x23, 0x2F, 0x07, 0x48, 0xDA, 0xB4, 0xD8, 0xB1, 0x00, 0xDA, 0xAA, 0xCD, 0xB7, 0x73, 0xE5,
	0xA4, 0xC0, 0xF0, 0xAD, 0x70, 0x99, 0x34, 0x4B, 0x72, 0x07, 0xF0, 0x2B, 0x39, 0xF4, 0x97, 0x42,
	0x9D, 0xCE, 0x3F, 0x34, 0x63, 0x51, 0xFE, 0xE9, 0xEA, 0xB8, 0x91, 0x6F, 0x47, 0xE8, 0xE4, 0x6F,
	0x94, 0x22, 0x7A, 0x7E, 0x47, 0x22, 0xF5, 0xB3, 0x42, 0x71, 0x11, 0x08, 0x3E, 0x84, 0x07, 0x09,
	0xC6, 0x25, 0x81, 0x31, 0x05, 0xA1, 0x14, 0x0E, 0x1E, 0x2A, 0xE1, 0x28, 0xE9, 0x4D, 0xB1, 0x37,
	0x26, 0x6C, 0x18, 0x19, 0x99, 0x04, 0xEE, 0xD7, 0x3C, 0xE1, 0xB1, 0xF1, 0x95, 0x75, 0x15, 0x4D,
	0xBB, 0x50, 0x8E, 0x7A, 0xDB, 0xF6, 0xD5, 0x10, 0x42, 0xB9, 0xC3, 0x45, 0x98, 0x9D, 0x43, 0x96,
	0x7F, 0x72, 0x46, 0x16, 0x1D, 0x0C, 0xAE, 0x40, 0x35, 0xC6, 0xAD, 0x69, 0x5A, 0x87, 0x9B, 0x66,
	0x1F, 0x32, 0xD0, 0x6B, 0xA9, 0x45, 0xF1, 0xD4, 0x2F, 0xB9, 0xE8, 0xA9, 0xD8, 0xFC, 0x0A, 0x39,
	0x3E, 0x55, 0x74, 0x06, 0x1A, 0x61, 0xE8, 0x06, 0x87, 0x6E, 0x1F, 0xC4, 0x75, 0xDA, 0xDF, 0xC0,
	0x0F, 0x60, 0x3B, 0xB4, 0xE7, 0x67, 0xFD, 0xB8, 0x3A, 0x0A, 0xA4, 0x2F, 0x84, 0x98, 0x7B, 0x23,
	0x14, 0x71, 0xB7, 0x2A, 0x1F, 0x40, 0x1E, 0x30, 0x96, 0x95, 0xC4, 0x98, 0x49, 0xE4, 0x58, 0xCF,
	0x79, 0x2D, 0x85, 0x70, 0x12, 0x13, 0xD2, 0x11, 0x67, 0x8E, 0x33, 0xEA, 0xEC, 0x19, 0x5D, 0x68,
	0xDC, 0xBD, 0x36, 0x2F, 0x67, 0x5D, 0xA1, 0x05, 0xA0, 0x86, 0x8A, 0x50, 0xEF, 0x3B, 0x8C, 0xDF,
	0x35, 0x27, 0xBD, 0xAB, 0xFC, 0x7A, 0xBF, 0x31, 0x43, 0xF6, 0x7C, 0x20, 0xD6, 0x1D, 0x1B, 0xB2,
};
#elif defined(GSL3692)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x67, 0x37, 0x19, 0xC6, 0xE3, 0x54, 0xC5, 0x9D, 0x37, 0x38, 0x39, 0x66, 0x48, 0x13, 0x5C, 0x89,
	0x7B, 0x38, 0xD3, 0x4A, 0xC6, 0x83, 0x67, 0x41, 0x51, 0xB5, 0x2C, 0x69, 0xEA, 0x41, 0xE7, 0x23,
	0x8D, 0x12, 0x18, 0x0F, 0xB2, 0x93, 0x1A, 0x37, 0x80, 0xF9, 0x36, 0x08, 0x51, 0xB0, 0xF4, 0xB7,
	0x94, 0x1B, 0x20, 0x5F, 0xE0, 0x0D, 0xB9, 0x9D, 0x9D, 0x86, 0xFA, 0x90, 0x4A, 0x97, 0xA6, 0xD1,
	0xD3, 0x44, 0x6B, 0x2B, 0xC4, 0xCD, 0x1F, 0xBB, 0x5D, 0x59, 0xED, 0xFE, 0x89, 0xD8, 0x31, 0x29,
	0xF3, 0x2B, 0x1C, 0xCD, 0x9D, 0xF0, 0xD4, 0xFA, 0x04, 0xB4, 0xDA, 0xF3, 0x92, 0x61, 0xA5, 0xA8,
	0x4E, 0x5A, 0x1B, 0xAD, 0x8E, 0xA6, 0xEB, 0x1A, 0x0A, 0x9A, 0x98, 0x26, 0x05, 0x87, 0x17, 0xC6,
	0x98, 0x12, 0x24, 0x22, 0x39, 0x68, 0x30, 0x90, 0xEF, 0x90, 0xA3, 0x53, 0x68, 0x59, 0xC1, 0xAA,
	0x7F, 0x3D, 0xCB, 0x6A, 0xB1, 0x41, 0xDC, 0x11, 0x7D, 0xFF, 0x4F, 0x56, 0x43, 0x7F, 0x2C, 0xAC,
	0x3C, 0xE4, 0xC3, 0x31, 0xBD, 0x73, 0xA9, 0x3B, 0x43, 0x78, 0xF1, 0x5C, 0x6B, 0xD4, 0xF3, 0xD4,
	0xE6, 0x25, 0xC8, 0x14, 0x81, 0x6F, 0x3E, 0xAD, 0xEE, 0x00, 0xE8, 0x82, 0x89, 0x0D, 0x92, 0x18,
	0x1A, 0x5F, 0xCA, 0xFF, 0xC4, 0xB6, 0x1A, 0x55, 0xBF, 0x97, 0x13, 0x63, 0xCD, 0x06, 0xC9, 0xF8,
	0xBF, 0xD8, 0x4E, 0xA4, 0xFC, 0x96, 0xC9, 0xE6, 0xAA, 0x62, 0x32, 0x27, 0x5C, 0x8A, 0x23, 0x23,
	0xF0, 0x75, 0xA9, 0x15, 0xD8, 0xFE, 0x62, 0xC6, 0xA3, 0xE2, 0x89, 0x47, 0x4B, 0xCA, 0x9B, 0xEF,//OxEF replace 0xA3
	0x0A, 0x32, 0x74, 0x4A, 0xCC, 0xF6, 0x8A, 0xE8, 0x07, 0xFD, 0xC9, 0x9D, 0x99, 0x83, 0x5B, 0xA3,
	0xBB, 0xB4, 0x59, 0x9A, 0xCF, 0x5C, 0x71, 0xD6, 0x7F, 0x60, 0x3A, 0x03, 0xCC, 0x1F, 0xDE, 0xE3,
};
#elif defined(GSL5680)
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x5B, 0x17, 0x1C, 0x2B, 0xBB, 0x39, 0x71, 0xAD, 0x0A, 0x2E, 0x1D, 0xF0, 0x79, 0xA7, 0x63, 0x45,
	0xD7, 0xE1, 0xCC, 0x29, 0x94, 0x11, 0xB5, 0x7D, 0x08, 0x33, 0x5C, 0x41, 0x6A, 0x22, 0xCC, 0x83,
	0xCC, 0xCC, 0x1E, 0x45, 0x55, 0x26, 0x85, 0x31, 0x7C, 0x2D, 0xC5, 0xD0, 0x19, 0x4A, 0x7D, 0xFA,
	0x47, 0xF1, 0x29, 0xD3, 0x18, 0xB2, 0x8F, 0xB1, 0x75, 0x65, 0xE0, 0x36, 0xA2, 0x16, 0x90, 0x0A,
	0x7D, 0xE9, 0x5C, 0xEB, 0xA2, 0xD9, 0x38, 0x4A, 0x7F, 0x30, 0x1F, 0x63, 0xAD, 0x53, 0x91, 0xE6,
	0x25, 0x2D, 0xB1, 0x59, 0x6D, 0x5E, 0xDC, 0x26, 0xF4, 0xF4, 0x9A, 0x59, 0x00, 0x2F, 0x51, 0xD8,
	0x52, 0x19, 0xB7, 0x51, 0x47, 0x6F, 0x93, 0x74, 0xB5, 0x24, 0x6E, 0xA6, 0x91, 0x81, 0x70, 0x65,
	0x76, 0x4B, 0x09, 0x9A, 0x19, 0xD9, 0x69, 0x38, 0x1B, 0x5E, 0xB4, 0xF5, 0xA6, 0x05, 0xCB, 0xE6,
	0x1F, 0xDB, 0x91, 0xAE, 0x8E, 0xEB, 0x56, 0x12, 0x0E, 0x31, 0x3F, 0x45, 0xAC, 0x98, 0x05, 0xB2,
	0x04, 0xE9, 0xDD, 0x27, 0x1B, 0x2F, 0x57, 0x16, 0xEC, 0x3E, 0xA4, 0x50, 0x0B, 0x93, 0x87, 0x50,
	0xA7, 0x7D, 0x66, 0x14, 0xD6, 0xE9, 0xEA, 0x9B, 0x97, 0xD8, 0x73, 0xB2, 0x94, 0xAF, 0xFD, 0x2C,
	0x58, 0x1D, 0x43, 0xBB, 0xD8, 0xA7, 0x93, 0x0B, 0x58, 0x20, 0xC4, 0x1A, 0x2E, 0xCA, 0x73, 0xE8,
	0xC0, 0x1E, 0x91, 0x33, 0xE9, 0xF4, 0xCB, 0xC3, 0xD6, 0x1B, 0x24, 0x0C, 0x56, 0xAA, 0xD4, 0x10,
	0x97, 0xEC, 0xDE, 0x7D, 0xF8, 0x2E, 0x58, 0xFF, 0x1B, 0x2E, 0xB6, 0x50, 0xDE, 0x40, 0x39, 0x87,
	0x29, 0x8C, 0x8C, 0x4D, 0x93, 0x15, 0x2C, 0x9C, 0xDB, 0x54, 0x76, 0xD2, 0x72, 0x00, 0x47, 0x44,
	0xE7, 0xE8, 0xB1, 0x5C, 0x6B, 0x9E, 0x7B, 0x69, 0x2C, 0xBC, 0x7E, 0x70, 0xE6, 0x9F, 0x93, 0xDB,
};
#else
static const BYTE gsl_key[FW_KEY_LENGTH] =
{
	0x5B, 0x17, 0x1C, 0x2B, 0xBB, 0x39, 0x71, 0xAD, 0x0A, 0x2E, 0x1D, 0xF0, 0x79, 0xA7, 0x63, 0x45,
	0xD7, 0xE1, 0xCC, 0x29, 0x94, 0x11, 0xB5, 0x7D, 0x08, 0x33, 0x5C, 0x41, 0x6A, 0x22, 0xCC, 0x83,
	0xCC, 0xCC, 0x1E, 0x45, 0x55, 0x26, 0x85, 0x31, 0x7C, 0x2D, 0xC5, 0xD0, 0x19, 0x4A, 0x7D, 0xFA,
	0x47, 0xF1, 0x29, 0xD3, 0x18, 0xB2, 0x8F, 0xB1, 0x75, 0x65, 0xE0, 0x36, 0xA2, 0x16, 0x90, 0x0A,
	0x7D, 0xE9, 0x5C, 0xEB, 0xA2, 0xD9, 0x38, 0x4A, 0x7F, 0x30, 0x1F, 0x63, 0xAD, 0x53, 0x91, 0xE6,
	0x25, 0x2D, 0xB1, 0x59, 0x6D, 0x5E, 0xDC, 0x26, 0xF4, 0xF4, 0x9A, 0x59, 0x00, 0x2F, 0x51, 0xD8,
	0x52, 0x19, 0xB7, 0x51, 0x47, 0x6F, 0x93, 0x74, 0xB5, 0x24, 0x6E, 0xA6, 0x91, 0x81, 0x70, 0x65,
	0x76, 0x4B, 0x09, 0x9A, 0x19, 0xD9, 0x69, 0x38, 0x1B, 0x5E, 0xB4, 0xF5, 0xA6, 0x05, 0xCB, 0xE6,
	0x1F, 0xDB, 0x91, 0xAE, 0x8E, 0xEB, 0x56, 0x12, 0x0E, 0x31, 0x3F, 0x45, 0xAC, 0x98, 0x05, 0xB2,
	0x04, 0xE9, 0xDD, 0x27, 0x1B, 0x2F, 0x57, 0x16, 0xEC, 0x3E, 0xA4, 0x50, 0x0B, 0x93, 0x87, 0x50,
	0xA7, 0x7D, 0x66, 0x14, 0xD6, 0xE9, 0xEA, 0x9B, 0x97, 0xD8, 0x73, 0xB2, 0x94, 0xAF, 0xFD, 0x2C,
	0x58, 0x1D, 0x43, 0xBB, 0xD8, 0xA7, 0x93, 0x0B, 0x58, 0x20, 0xC4, 0x1A, 0x2E, 0xCA, 0x73, 0xE8,
	0xC0, 0x1E, 0x91, 0x33, 0xE9, 0xF4, 0xCB, 0xC3, 0xD6, 0x1B, 0x24, 0x0C, 0x56, 0xAA, 0xD4, 0x10,
	0x97, 0xEC, 0xDE, 0x7D, 0xF8, 0x2E, 0x58, 0xFF, 0x1B, 0x2E, 0xB6, 0x50, 0xDE, 0x40, 0x39, 0x87,
	0x29, 0x8C, 0x8C, 0x4D, 0x93, 0x15, 0x2C, 0x9C, 0xDB, 0x54, 0x76, 0xD2, 0x72, 0x00, 0x47, 0x44,
	0xE7, 0xE8, 0xB1, 0x5C, 0x6B, 0x9E, 0x7B, 0x69, 0x2C, 0xBC, 0x7E, 0x70, 0xE6, 0x9F, 0x93, 0xDB,
};
#endif

typedef struct _HIDFX2_INPUT_REPORT {
	BYTE ReportTouchId;               //Report ID for the collection

	BYTE Tip0;                               //Tip Switch 
	BYTE ContactId0;						 //contact id
	BYTE XLSB0;                              //The X axis LSB
	BYTE XMSB0;                              //The X axis MSB
	BYTE YLSB0;                              //The Y axis LSB 
	BYTE YMSB0;                              //The Y axis MSB

	BYTE Tip1;                               //Tip Switch 
	BYTE ContactId1;						 //contact id
	BYTE XLSB1;                              //The X axis LSB
	BYTE XMSB1;                              //The X axis MSB
	BYTE YLSB1;                              //The Y axis LSB 
	BYTE YMSB1;                              //The Y axis MSB

	BYTE Tip2;                               //Tip Switch 
	BYTE ContactId2;						 //contact id
	BYTE XLSB2;                              //The X axis LSB
	BYTE XMSB2;                              //The X axis MSB
	BYTE YLSB2;                              //The Y axis LSB
	BYTE YMSB2;                              //The Y axis MSB

	BYTE Tip3;                               //Tip Switch 
	BYTE ContactId3;						 //contact id
	BYTE XLSB3;                              //The X axis LSB
	BYTE XMSB3;                              //The X axis MSB
	BYTE YLSB3;                              //The Y axis LSB
	BYTE YMSB3;                              //The Y axis MSB

	BYTE Tip4;                               //Tip Switch
	BYTE ContactId4;						 //contact id
	BYTE XLSB4;                              //The X axis LSB
	BYTE XMSB4;                              //The X axis MSB
	BYTE YLSB4;                              //The Y axis LSB
	BYTE YMSB4;                              //The Y axis MSB

#ifndef	SET_MULTITOUCH_5POINT
	BYTE Tip5;                               //Tip Switch 
	BYTE ContactId5;						 //contact id
	BYTE XLSB5;                              //The X axis LSB
	BYTE XMSB5;                              //The X axis MSB
	BYTE YLSB5;                              //The Y axis LSB 
	BYTE YMSB5;                              //The Y axis MSB

	BYTE Tip6;                               //Tip Switch 
	BYTE ContactId6;						 //contact id
	BYTE XLSB6;                              //The X axis LSB
	BYTE XMSB6;                              //The X axis MSB
	BYTE YLSB6;                              //The Y axis LSB 
	BYTE YMSB6;                              //The Y axis MSB

	BYTE Tip7;                               //Tip Switch 
	BYTE ContactId7;						 //contact id
	BYTE XLSB7;                              //The X axis LSB
	BYTE XMSB7;                              //The X axis MSB
	BYTE YLSB7;                              //The Y axis LSB
	BYTE YMSB7;                              //The Y axis MSB

	BYTE Tip8;                               //Tip Switch 
	BYTE ContactId8;						 //contact id
	BYTE XLSB8;                              //The X axis LSB
	BYTE XMSB8;                              //The X axis MSB
	BYTE YLSB8;                              //The Y axis LSB
	BYTE YMSB8;                              //The Y axis MSB

	BYTE Tip9;                               //Tip Switch
	BYTE ContactId9;						 //contact id
	BYTE XLSB9;                              //The X axis LSB
	BYTE XMSB9;                              //The X axis MSB
	BYTE YLSB9;                              //The Y axis LSB
	BYTE YMSB9;                              //The Y axis MSB
#endif
	BYTE ScanTimeLSB;                 //The Scan Time LSB
	BYTE ScanTimeMSB;                 //The Scan Time MSB
	BYTE ContactCount;			//touches num
}HIDFX2_INPUT_REPORT, *PHIDFX2_INPUT_REPORT;

typedef struct _POINT_DATA{
	UINT8 id;
	UINT32 x;
	UINT32 y;
}POINT_DATA, *PPOINT_DATA;

#ifdef SUPPORT_WINKEY
typedef struct  _HIDFX2_INPUT_REPORT_EX {

	BYTE ReportTouchId;               //Report ID for the collection
	BYTE dwButtonStates;
	BYTE Reserved;
	BYTE KeyCode[6];
	
}HIDFX2_INPUT_REPORT_EX, *PHIDFX2_INPUT_REPORT_EX;
#endif

#endif//HIDDESC_H